import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useEffect, useState } from "react";
import { v4 as uuid } from 'uuid';
import styles from "../../styles/Home.module.css";
import MyButton from "../../components/button";


export default function Home() {
  const [todoList, setTodoList] = useState([]);
  const [todoTitle, setTodoTitle] = useState("");

  /** get todo list in the local storage */
  useEffect(() => {
    const todoList = localStorage.getItem("todoList");
    if (todoList) {
      setTodoList(JSON.parse(todoList));
    }
  }, []);

  /** Add TODO in the local storage */
  const addTodo = () => {
    const newTodo = {
      id: uuid(),
      title: todoTitle,
    };
    const newTodoList = [...todoList, newTodo];
    setTodoList(newTodoList);
    localStorage.setItem("todoList", JSON.stringify(newTodoList));
    setTodoTitle("");
  };

  /** Delete TODO in the local storage */
  const deleteTodo = (todoID) => {
    const newTodoList = todoList.filter((todoItem) => todoItem.id !== todoID);
    localStorage.setItem("todoList", JSON.stringify(newTodoList));
    setTodoList(newTodoList);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>TODOアプリ | YEConnect Inc, </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/ye-connect.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className="text-3xl font-bold">Todo List</h1>
        <div className="grid grid-cols-3 gap-4">
          <div className="col-span-2">
              <input
                className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                autoFocus={true}
                type="text"
                placeholder="Todo List"
                value={todoTitle}
                onChange={(e) => setTodoTitle(e.target.value)}
              />
              <button className="bg-blue-300 hover:bg-grey text-grey-darkest font-bold py-2 px-4 rounded inline-flex items-center" onClick={addTodo}>
                送信
              </button>
          </div>
        </div>
        <div>
          {/** TODO List{JSON.stringify(todoList)} */}
          {/** TODO LIST UI */}
          <table className="table-auto">
            <thead>
              <tr>
                <th className="px-4 py-2">#</th>
                <th className="px-4 py-2">Title</th>
                <th className="px-4 py-2">Detail</th>
                <th className="px-4 py-2">Delete</th>
              </tr>
            </thead>
            <tbody>
              {todoList.map((todoItem, index) => (
                <tr className={index % 2 == 0 ? "" : "bg-gray-100"} key={index}>
                  <td className="border px-4 py-2">{index}</td>
                  <td className="border px-4 py-2">{todoItem.title}</td>
                  <td className="border px-4 py-2">
                    <Link
                      className="todo_item_title"
                      href={`/todo/${todoItem.id}`}
                    >
                      <button className="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded">
                        <svg
                          fill="#000000"
                          xmlns="http://www.w3.org/2000/svg"
                          viewBox="0 0 30 30"
                          width="30px"
                          height="30px"
                        >
                          {" "}
                          <path d="M 22.828125 3 C 22.316375 3 21.804562 3.1954375 21.414062 3.5859375 L 19 6 L 24 11 L 26.414062 8.5859375 C 27.195062 7.8049375 27.195062 6.5388125 26.414062 5.7578125 L 24.242188 3.5859375 C 23.851688 3.1954375 23.339875 3 22.828125 3 z M 17 8 L 5.2597656 19.740234 C 5.2597656 19.740234 6.1775313 19.658 6.5195312 20 C 6.8615312 20.342 6.58 22.58 7 23 C 7.42 23.42 9.6438906 23.124359 9.9628906 23.443359 C 10.281891 23.762359 10.259766 24.740234 10.259766 24.740234 L 22 13 L 17 8 z M 4 23 L 3.0566406 25.671875 A 1 1 0 0 0 3 26 A 1 1 0 0 0 4 27 A 1 1 0 0 0 4.328125 26.943359 A 1 1 0 0 0 4.3378906 26.939453 L 4.3632812 26.931641 A 1 1 0 0 0 4.3691406 26.927734 L 7 26 L 5.5 24.5 L 4 23 z" />
                        </svg>
                      </button>
                    </Link>
                  </td>
                  <td className="border px-4 py-2">
                    <button
                      onClick={() => {
                        deleteTodo(todoItem.id);
                      }}
                      className="bg-red-300 hover:bg-grey text-grey-darkest font-bold py-2 px-4 rounded inline-flex items-center"
                    >
                      <svg
                        fill="#000000"
                        xmlns="http://www.w3.org/2000/svg"
                        viewBox="0 0 30 30"
                        width="30px"
                        height="30px"
                      >
                        {" "}
                        <path d="M 14.984375 2.4863281 A 1.0001 1.0001 0 0 0 14 3.5 L 14 4 L 8.5 4 A 1.0001 1.0001 0 0 0 7.4863281 5 L 6 5 A 1.0001 1.0001 0 1 0 6 7 L 24 7 A 1.0001 1.0001 0 1 0 24 5 L 22.513672 5 A 1.0001 1.0001 0 0 0 21.5 4 L 16 4 L 16 3.5 A 1.0001 1.0001 0 0 0 14.984375 2.4863281 z M 6 9 L 7.7929688 24.234375 C 7.9109687 25.241375 8.7633438 26 9.7773438 26 L 20.222656 26 C 21.236656 26 22.088031 25.241375 22.207031 24.234375 L 24 9 L 6 9 z" />
                      </svg>
                    </button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
          <MyButton title={"コンポーネント化"}/>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://www.ye-connect.com"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image
              src="/ye-connect.svg"
              alt="YECoonect Logo"
              width={30}
              height={30}
            />
          </span>
        </a>
      </footer>
    </div>
  );
}
